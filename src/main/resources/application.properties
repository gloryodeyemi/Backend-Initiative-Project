server.port=7712
spring.application.name=sca-service
spring.sql.init.mode=always
spring.sql.init.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/sca
spring.datasource.username=postgres
spring.datasource.password=example
spring.jpa.hibernate.ddl-auto=update
#
#spring:
#security:
#oauth2:
#client:
#registration:
#facebook:
#clientId: 1201466177299473
#clientSecret: cc94d5f438b86abfecf2b5bb8eb5a408
#scope:
#- email
#- public_profile

spring.security.oauth2.client.registration.facebook.client-id=***************** 
spring.security.oauth2.client.registration.facebook.client-secret=***************
spring.security.oauth2.client.registration.facebook.scope=public_profile, email
spring.security.oauth2.client.registration.facebook.redirect-uri=http://localhost:7712/login/oauth2/code/facebook

spring.security.oauth2.client.registration.google.client-id=*****************************
spring.security.oauth2.client.registration.google.client-secret=*************************
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:7712/login/oauth2/code/google
#spring.security.oauth2.client.registration.accessTokenUri  =  https://www.googleapis.com/oauth2/v3/token
#spring.security.oauth2.client.registration.userAuthorizationUri  =  https://accounts.google.com/o/oauth2/auth
#spring.security.oauth2.client.registration.tokenName = oauth_token
#spring.security.oauth2.client.registration.authenticationScheme = query
#spring.security.oauth2.client.registration.clientAuthenticationScheme = form

#spring.security.oauth2.client.registration.userInfoUri=https://www.googleapis.com/userinfo/v2/me
#spring.security.oauth2.client.registration.preferTokenInfo = false